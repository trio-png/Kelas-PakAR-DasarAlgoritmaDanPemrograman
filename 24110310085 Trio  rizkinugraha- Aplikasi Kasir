{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOcK7dE6StEIH9VLTbPLUY9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bYyba0EaWZR8","executionInfo":{"status":"ok","timestamp":1752537293110,"user_tz":-420,"elapsed":192079,"user":{"displayName":"Trio Rizki Nugraha","userId":"00097693872694785053"}},"outputId":"539c24b5-dc30-4fb3-dbc4-7c00cbac3c7e"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 1\n","\n","Inventori kosong.\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 2\n","\n","=== Tambah Item Baru ===\n","Nama Produk: sabun \n","Kategori: kopi \n","Jumlah: 122\n","Harga per item: 8000\n","Produk 'sabun ' berhasil ditambahkan!\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 2\n","\n","=== Tambah Item Baru ===\n","Nama Produk: tepung \n","Kategori: makanan\n","Jumlah: 120000\n","Harga per item: 40000\n","Produk 'tepung ' berhasil ditambahkan!\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 1\n","\n","=== Daftar Inventori ===\n","+------+--------+------------+----------+---------+---------------------+\n","|   ID | Nama   | Kategori   |   Jumlah |   Harga | Terakhir Diupdate   |\n","+======+========+============+==========+=========+=====================+\n","|    1 | sabun  | kopi       |      122 |    8000 | 2025-07-14 23:52:48 |\n","+------+--------+------------+----------+---------+---------------------+\n","|    2 | tepung | makanan    |   120000 |   40000 | 2025-07-14 23:53:29 |\n","+------+--------+------------+----------+---------+---------------------+\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 3\n","\n","=== Daftar Inventori ===\n","+------+--------+------------+----------+---------+---------------------+\n","|   ID | Nama   | Kategori   |   Jumlah |   Harga | Terakhir Diupdate   |\n","+======+========+============+==========+=========+=====================+\n","|    1 | sabun  | kopi       |      122 |    8000 | 2025-07-14 23:52:48 |\n","+------+--------+------------+----------+---------+---------------------+\n","|    2 | tepung | makanan    |   120000 |   40000 | 2025-07-14 23:53:29 |\n","+------+--------+------------+----------+---------+---------------------+\n","\n","Masukkan ID produk yang ingin diedit: 2\n","\n","Mengedit produk: tepung \n","Kosongkan field jika tidak ingin mengubahnya\n","Nama Produk [tepung ]: \n","Kategori [makanan]: \n","Jumlah [120000]: \n","Harga [40000.0]: \n","Produk berhasil diperbarui!\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 4\n","\n","=== Daftar Inventori ===\n","+------+--------+------------+----------+---------+---------------------+\n","|   ID | Nama   | Kategori   |   Jumlah |   Harga | Terakhir Diupdate   |\n","+======+========+============+==========+=========+=====================+\n","|    1 | sabun  | kopi       |      122 |    8000 | 2025-07-14 23:52:48 |\n","+------+--------+------------+----------+---------+---------------------+\n","|    2 | tepung | makanan    |   120000 |   40000 | 2025-07-14 23:54:20 |\n","+------+--------+------------+----------+---------+---------------------+\n","\n","Masukkan ID produk yang ingin dihapus: 1\n","Apakah Anda yakin ingin menghapus produk 'sabun '? (y/n): y\n","Produk berhasil dihapus!\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 6\n","Pilihan tidak valid!\n","\n","=== APLIKASI INVENTORI ===\n","1. Lihat Daftar Produk\n","2. Tambah Produk\n","3. Edit Produk\n","4. Hapus Produk\n","0. Keluar\n","Pilih menu: 0\n","Keluar dari aplikasi...\n"]}],"source":["import sqlite3\n","from tabulate import tabulate\n","\n","class InventoryApp:\n","    def __init__(self):\n","        self.conn = sqlite3.connect('inventory.db')\n","        self.c = self.conn.cursor()\n","        self.create_table()\n","\n","    def create_table(self):\n","        \"\"\"Membuat tabel inventori jika belum ada\"\"\"\n","        self.c.execute('''CREATE TABLE IF NOT EXISTS inventory\n","                     (id INTEGER PRIMARY KEY AUTOINCREMENT,\n","                      name TEXT NOT NULL,\n","                      category TEXT,\n","                      quantity INTEGER,\n","                      price REAL,\n","                      last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP)''')\n","        self.conn.commit()\n","\n","    def add_item(self):\n","        \"\"\"Menambahkan item baru ke inventori\"\"\"\n","        print(\"\\n=== Tambah Item Baru ===\")\n","        name = input(\"Nama Produk: \")\n","        category = input(\"Kategori: \")\n","        quantity = int(input(\"Jumlah: \"))\n","        price = float(input(\"Harga per item: \"))\n","\n","        self.c.execute(\"INSERT INTO inventory (name, category, quantity, price) VALUES (?, ?, ?, ?)\",\n","                      (name, category, quantity, price))\n","        self.conn.commit()\n","        print(f\"Produk '{name}' berhasil ditambahkan!\")\n","\n","    def view_items(self):\n","        \"\"\"Menampilkan semua item dalam inventori\"\"\"\n","        self.c.execute(\"SELECT * FROM inventory\")\n","        items = self.c.fetchall()\n","\n","        if not items:\n","            print(\"\\nInventori kosong.\")\n","            return\n","\n","        headers = [\"ID\", \"Nama\", \"Kategori\", \"Jumlah\", \"Harga\", \"Terakhir Diupdate\"]\n","        print(\"\\n=== Daftar Inventori ===\")\n","        print(tabulate(items, headers=headers, tablefmt=\"grid\"))\n","\n","    def edit_item(self):\n","        \"\"\"Mengedit item yang ada dalam inventori\"\"\"\n","        self.view_items()\n","        item_id = input(\"\\nMasukkan ID produk yang ingin diedit: \")\n","\n","        self.c.execute(\"SELECT * FROM inventory WHERE id=?\", (item_id,))\n","        item = self.c.fetchone()\n","\n","        if not item:\n","            print(f\"Tidak ditemukan produk dengan ID {item_id}\")\n","            return\n","\n","        print(f\"\\nMengedit produk: {item[1]}\")\n","        print(\"Kosongkan field jika tidak ingin mengubahnya\")\n","\n","        name = input(f\"Nama Produk [{item[1]}]: \")\n","        category = input(f\"Kategori [{item[2]}]: \")\n","        quantity = input(f\"Jumlah [{item[3]}]: \")\n","        price = input(f\"Harga [{item[4]}]: \")\n","\n","        # Hanya update field yang diisi\n","        update_sql = \"UPDATE inventory SET \"\n","        update_params = []\n","\n","        if name:\n","            update_sql += \"name=?, \"\n","            update_params.append(name)\n","        if category:\n","            update_sql += \"category=?, \"\n","            update_params.append(category)\n","        if quantity:\n","            update_sql += \"quantity=?, \"\n","            update_params.append(int(quantity))\n","        if price:\n","            update_sql += \"price=?, \"\n","            update_params.append(float(price))\n","\n","        update_sql += \"last_updated=CURRENT_TIMESTAMP WHERE id=?\"\n","        update_params.append(item_id)\n","\n","        self.c.execute(update_sql, tuple(update_params))\n","        self.conn.commit()\n","        print(\"Produk berhasil diperbarui!\")\n","\n","    def delete_item(self):\n","        \"\"\"Menghapus item dari inventori\"\"\"\n","        self.view_items()\n","        item_id = input(\"\\nMasukkan ID produk yang ingin dihapus: \")\n","\n","        self.c.execute(\"SELECT name FROM inventory WHERE id=?\", (item_id,))\n","        item_name = self.c.fetchone()\n","\n","        if not item_name:\n","            print(f\"Tidak ditemukan produk dengan ID {item_id}\")\n","            return\n","\n","        confirm = input(f\"Apakah Anda yakin ingin menghapus produk '{item_name[0]}'? (y/n): \")\n","        if confirm.lower() == 'y':\n","            self.c.execute(\"DELETE FROM inventory WHERE id=?\", (item_id,))\n","            self.conn.commit()\n","            print(\"Produk berhasil dihapus!\")\n","        else:\n","            print(\"Penghapusan dibatalkan.\")\n","\n","    def run(self):\n","        \"\"\"Menjalankan aplikasi utama\"\"\"\n","        while True:\n","            print(\"\\n=== APLIKASI INVENTORI ===\")\n","            print(\"1. Lihat Daftar Produk\")\n","            print(\"2. Tambah Produk\")\n","            print(\"3. Edit Produk\")\n","            print(\"4. Hapus Produk\")\n","            print(\"0. Keluar\")\n","\n","            choice = input(\"Pilih menu: \")\n","\n","            if choice == '1':\n","                self.view_items()\n","            elif choice == '2':\n","                self.add_item()\n","            elif choice == '3':\n","                self.edit_item()\n","            elif choice == '4':\n","                self.delete_item()\n","            elif choice == '0':\n","                print(\"Keluar dari aplikasi...\")\n","                break\n","            else:\n","                print(\"Pilihan tidak valid!\")\n","\n","        self.conn.close()\n","\n","if __name__ == \"__main__\":\n","    try:\n","        app = InventoryApp()\n","        app.run()\n","    except KeyboardInterrupt:\n","        print(\"\\nAplikasi dihentikan.\")\n","    except Exception as e:\n","        print(f\"Terjadi error: {e}\")"]}]}